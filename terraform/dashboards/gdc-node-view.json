{
  "dashboardFilters": [
    {
      "filterType": "RESOURCE_LABEL",
      "labelKey": "project_id",
      "stringValue": "",
      "templateVariable": "project_id"
    },
    {
      "filterType": "RESOURCE_LABEL",
      "labelKey": "cluster_name",
      "stringValue": "",
      "templateVariable": "cluster_name"
    }
  ],
  "displayName": "GDC - Node View",
  "labels": {},
  "mosaicLayout": {
    "columns": 48,
    "tiles": [
      {
        "height": 8,
        "widget": {
          "scorecard": {
            "blankView": {},
            "thresholds": [],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "fetch k8s_node\n| metric 'kubernetes.io/anthos/node/cpu/total_cores'\n| ${project_id}\n| ${cluster_name}\n| group_by 10m, [value_total_cores_mean: mean(value.total_cores)]\n| every 10m\n| group_by [], [row_count: row_count()]",
              "unitOverride": ""
            }
          },
          "title": "Total Nodes"
        },
        "width": 8
      },
      {
        "height": 8,
        "widget": {
          "scorecard": {
            "blankView": {},
            "thresholds": [],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "fetch k8s_node\n| metric 'kubernetes.io/anthos/node/cpu/total_cores'\n| ${project_id}\n| ${cluster_name}\n| group_by 1m, [value_total_cores_mean: mean(value.total_cores)]\n| every 1m\n| group_by [],\n    [value_total_cores_mean_aggregate: aggregate(value_total_cores_mean)]",
              "unitOverride": ""
            }
          },
          "title": "Total Cores"
        },
        "width": 8,
        "xPos": 8
      },
      {
        "height": 8,
        "widget": {
          "scorecard": {
            "blankView": {},
            "thresholds": [],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "fetch k8s_node\n| metric 'kubernetes.io/anthos/node/cpu/allocatable_cores'\n| ${project_id}\n| ${cluster_name}\n| group_by 1m, [value_allocatable_cores_mean: mean(value.allocatable_cores)]\n| every 1m\n| group_by [],\n    [value_allocatable_cores_mean_aggregate:\n       aggregate(value_allocatable_cores_mean)]",
              "unitOverride": ""
            }
          },
          "title": "Allocatable Cores"
        },
        "width": 8,
        "xPos": 16
      },
      {
        "height": 8,
        "widget": {
          "scorecard": {
            "blankView": {},
            "thresholds": [],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "fetch k8s_node\n| metric 'kubernetes.io/anthos/node/memory/total_bytes'\n| ${project_id}\n| ${cluster_name}\n| group_by 1m, [value_total_bytes_mean: mean(value.total_bytes)]\n| every 1m\n| group_by [],\n    [value_total_bytes_mean_aggregate: aggregate(value_total_bytes_mean)]",
              "unitOverride": ""
            }
          },
          "title": "Total Memory"
        },
        "width": 8,
        "xPos": 24
      },
      {
        "height": 8,
        "widget": {
          "scorecard": {
            "blankView": {},
            "thresholds": [],
            "timeSeriesQuery": {
              "timeSeriesQueryLanguage": "fetch k8s_node\n| metric 'kubernetes.io/anthos/node/memory/allocatable_bytes'\n| ${project_id}\n| ${cluster_name}\n| group_by 1m, [value_allocatable_bytes_mean: mean(value.allocatable_bytes)]\n| every 1m\n| group_by [],\n    [value_allocatable_bytes_mean_aggregate:\n       aggregate(value_allocatable_bytes_mean)]",
              "unitOverride": ""
            }
          },
          "title": "Allocatable Memory"
        },
        "width": 8,
        "xPos": 32
      },
      {
        "height": 32,
        "widget": {
          "collapsibleGroup": {
            "collapsed": false
          },
          "title": "CPU and Memory"
        },
        "width": 48,
        "yPos": 8
      },
      {
        "height": 16,
        "widget": {
          "title": "CPU Usage per Node",
          "xyChart": {
            "chartOptions": {
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "breakdowns": [],
                "dimensions": [],
                "measures": [],
                "plotType": "STACKED_AREA",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "{ fetch k8s_node\n  | metric 'kubernetes.io/anthos/node/cpu/allocatable_utilization'\n| ${project_id}\n| ${cluster_name}\n  | group_by 1m,\n      [value_allocatable_utilization_mean: mean(value.allocatable_utilization)]\n  | every 1m\n; fetch k8s_node\n  | metric 'kubernetes.io/anthos/node/cpu/allocatable_cores'\n| ${project_id}\n| ${cluster_name}\n  | group_by 1m, [value_allocatable_core_mean: mean(value.allocatable_cores)]\n  | every 1m }\n| join\n| value [scaled_util: val(0) * val(1)]\n",
                  "unitOverride": ""
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        },
        "width": 24,
        "yPos": 8
      },
      {
        "height": 16,
        "widget": {
          "title": "Memory Usage per Node",
          "xyChart": {
            "chartOptions": {
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "breakdowns": [],
                "dimensions": [],
                "measures": [],
                "plotType": "STACKED_AREA",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "       fetch k8s_node\n| metric 'kubernetes.io/anthos/node/memory/used_bytes'\n| ${project_id}\n| ${cluster_name}\n| group_by 1m,\n    [value_used_bytes_mean: mean(value.used_bytes)]\n| every 1m\n| group_by [resource.node_name],\n    [value_used_bytes_mean_aggregate:\n       aggregate(value_used_bytes_mean)]",
                  "unitOverride": ""
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        },
        "width": 24,
        "xPos": 24,
        "yPos": 8
      },
      {
        "height": 16,
        "widget": {
          "title": "CPU Util % per Node",
          "xyChart": {
            "chartOptions": {
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "breakdowns": [],
                "dimensions": [],
                "measures": [],
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "fetch k8s_node\n| metric 'kubernetes.io/anthos/node/cpu/allocatable_utilization'\n| ${project_id}\n| ${cluster_name}\n| group_by 1m,    [value_allocatable_utilization_mean: mean(value.allocatable_utilization)]\n| every 1m\n| scale '%'",
                  "unitOverride": ""
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        },
        "width": 24,
        "yPos": 24
      },
      {
        "height": 16,
        "widget": {
          "title": "Memory Util % per Node",
          "xyChart": {
            "chartOptions": {
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "breakdowns": [],
                "dimensions": [],
                "measures": [],
                "plotType": "LINE",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "fetch k8s_node\n| metric 'kubernetes.io/anthos/node/memory/allocatable_utilization'\n| ${project_id}\n| ${cluster_name}\n| group_by 1m,\n    [value_allocatable_utilization_mean: mean(value.allocatable_utilization)]\n| every 1m\n| group_by [resource.node_name],\n    [value_allocatable_utilization_mean_aggregate:\n       aggregate(value_allocatable_utilization_mean)]\n| scale '%'",
                  "unitOverride": ""
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        },
        "width": 24,
        "xPos": 24,
        "yPos": 24
      },
      {
        "height": 16,
        "widget": {
          "collapsibleGroup": {
            "collapsed": false
          },
          "title": "Pod and Container Count"
        },
        "width": 48,
        "yPos": 56
      },
      {
        "height": 16,
        "widget": {
          "timeSeriesTable": {
            "columnSettings": [
              {
                "column": "value",
                "visible": false
              }
            ],
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "fetch k8s_container\n| metric 'kubernetes.io/anthos/container/cpu/core_usage_time'\n| ${project_id}\n| ${cluster_name}\n| align rate(1m)\n| every 1m\n| group_by\n    [resource.project_id, resource.location, resource.cluster_name,\n     resource.namespace_name, resource.pod_name, resource.container_name,\n     metadata.system.node_name],\n    [value_core_usage_time_mean: pick_any(value.core_usage_time)]\n| group_by [metadata.system.node_name], [row_count()]"
                }
              }
            ],
            "metricVisualization": "NUMBER"
          },
          "title": "Number of Containers per Node"
        },
        "width": 24,
        "xPos": 24,
        "yPos": 56
      },
      {
        "height": 16,
        "widget": {
          "timeSeriesTable": {
            "columnSettings": [
              {
                "column": "value",
                "visible": false
              }
            ],
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "fetch k8s_pod\n| metric 'kubernetes.io/anthos/pod/network/received_bytes_count'\n| ${project_id}\n| ${cluster_name}\n| align rate(1m)\n| every 1m\n| group_by [resource.project_id, resource.location, resource.cluster_name, resource.namespace_name, resource.pod_name, metadata.system.node_name],\n    [value_received_bytes_count_mean: pick_any(value.received_bytes_count)]\n    | group_by [metadata.system.node_name], [row_count()]\n"
                }
              }
            ],
            "metricVisualization": "NUMBER"
          },
          "title": "Number of Pods per Node"
        },
        "width": 24,
        "yPos": 56
      },
      {
        "height": 16,
        "widget": {
          "collapsibleGroup": {
            "collapsed": false
          },
          "title": "Network Usage per Node"
        },
        "width": 48,
        "yPos": 40
      },
      {
        "height": 16,
        "widget": {
          "title": "Received bytes per node",
          "xyChart": {
            "chartOptions": {
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "breakdowns": [],
                "dimensions": [],
                "measures": [],
                "plotType": "STACKED_AREA",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "fetch k8s_node\n| metric 'kubernetes.io/anthos/node/network/received_bytes_count'\n| ${project_id}\n| ${cluster_name}\n| filter (metric.interface =~ 'enp81s0f.*')\n| align rate(1m)\n| every 1m\n| group_by [resource.node_name],\n    [value_received_bytes_count_aggregate:\n       aggregate(value.received_bytes_count)]",
                  "unitOverride": ""
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        },
        "width": 24,
        "yPos": 40
      },
      {
        "height": 16,
        "widget": {
          "title": "Send bytes per node",
          "xyChart": {
            "chartOptions": {
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "breakdowns": [],
                "dimensions": [],
                "measures": [],
                "plotType": "STACKED_AREA",
                "targetAxis": "Y1",
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "fetch k8s_node\n| metric 'kubernetes.io/anthos/node/network/sent_bytes_count'\n| ${project_id}\n| ${cluster_name}\n| filter (metric.interface =~ 'enp81s0f.*')\n| align rate(1m)\n| every 1m\n| group_by [resource.node_name],\n    [value_sent_bytes_count_aggregate:\n       aggregate(value.sent_bytes_count)]",
                  "unitOverride": ""
                }
              }
            ],
            "thresholds": [],
            "yAxis": {
              "label": "",
              "scale": "LINEAR"
            }
          }
        },
        "width": 24,
        "xPos": 24,
        "yPos": 40
      },
      {
        "height": 16,
        "widget": {
          "collapsibleGroup": {
            "collapsed": false
          },
          "title": "Storage Usage per Node"
        },
        "width": 48,
        "yPos": 72
      },
      {
        "height": 16,
        "widget": {
          "title": "Free Robin Disk Space % per Node",
          "xyChart": {
            "chartOptions": {
              "mode": "COLOR"
            },
            "dataSets": [
              {
                "breakdowns": [],
                "dimensions": [],
                "measures": [],
                "plotType": "LINE",
                "targetAxis": "Y2",
                "timeSeriesQuery": {
                  "timeSeriesQueryLanguage": "{fetch prometheus_target\n| metric 'prometheus.googleapis.com/robin_disk_nslices/unknown'\n| filter (metric.wwn =~ '.*(robin--lvm).*')\n| ${project_id}\n| ${cluster_name}\n| group_by [node_name],   [value_robin_disk_rawused_sum: mul(sum(value.robin_disk_nslices), 1073741824)]\n| every 1m\n;\nfetch prometheus_target\n| metric 'prometheus.googleapis.com/robin_disk_size/unknown'\n| filter (metric.wwn =~ '.*(robin--lvm).*')\n| ${project_id}\n| ${cluster_name}\n| group_by [node_name],   [value_robin_disk_size_mean: sum(value.robin_disk_size)]\n| every 1m\n}\n| join\n| value [v_0: 1 - div(t_0.value_robin_disk_rawused_sum, t_1.value_robin_disk_size_mean)]",
                  "unitOverride": ""
                }
              }
            ],
            "thresholds": [
              {
                "label": "",
                "targetAxis": "Y2",
                "value": 0.2
              }
            ],
            "y2Axis": {
              "label": "% Disk Free",
              "scale": "LINEAR"
            }
          }
        },
        "width": 24,
        "yPos": 72
      },
      {
        "height": 16,
        "widget": {
          "timeSeriesTable": {
            "columnSettings": [
              {
                "column": "value",
                "visible": false
              }
            ],
            "dataSets": [
              {
                "timeSeriesQuery": {
                  "outputFullDuration": true,
                  "timeSeriesQueryLanguage": "{fetch prometheus_target\n| metric 'prometheus.googleapis.com/robin_disk_nslices/unknown'\n| filter (metric.wwn =~ '.*(robin--lvm).*')\n| ${project_id}\n| ${cluster_name}\n| group_by [Node: node_name],   [value_robin_disk_rawused_sum: mul(sum(value.robin_disk_nslices), 1073741824)]\n| every 1m\n;\nfetch prometheus_target\n| metric 'prometheus.googleapis.com/robin_disk_size/unknown'\n| filter (metric.wwn =~ '.*(robin--lvm).*')\n| ${project_id}\n| ${cluster_name}\n| group_by [Node: node_name],   [value_robin_disk_size_mean: mean(value.robin_disk_size)]\n| every 1m\n}\n| join\n| value [Disk_Free: cast_units(t_1.value_robin_disk_size_mean - t_0.value_robin_disk_rawused_sum, 'By')]"
                }
              }
            ],
            "metricVisualization": "NUMBER"
          },
          "title": "Free Robin Disk Space % per Node"
        },
        "width": 24,
        "xPos": 24,
        "yPos": 72
      }
    ]
  }
}